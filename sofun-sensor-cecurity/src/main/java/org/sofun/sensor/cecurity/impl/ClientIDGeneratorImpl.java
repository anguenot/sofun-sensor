/*
 * Copyright (c)  Sofun Gaming SAS.
 * Copyright (c)  Julien Anguenot <julien@anguenot.org>
 * Copyright (c)  Julien De Preaumont <juliendepreaumont@gmail.com>
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Julien Anguenot <julien@anguenot.org> - initial API and implementation
*/

package org.sofun.sensor.cecurity.impl;

import java.security.SecureRandom;
import java.util.concurrent.atomic.AtomicLong;

import org.sofun.sensor.cecurity.api.ClientIDGenerator;
import org.sofun.sensor.cecurity.api.Configuration;

/**
 * ID generator for outgoing messages.
 * 
 * <p>
 * 
 * This is the sensor's responsibility to generator this identifier. Note this
 * is different than the event identifier generated by the safe.
 * 
 * @author <a href="mailto:julien@anguenot.org">Julien Anguenot</a>
 * 
 */
public class ClientIDGeneratorImpl implements ClientIDGenerator {

    private static final String PREFIX = Configuration.getProperties()
            .getProperty("client.id.prefix");

    private static SecureRandom sc = new SecureRandom();

    private final AtomicLong counter = new AtomicLong(sc.nextInt(100000));

    @Override
    public String getUniqueClientID() {
        return PREFIX + "-" + String.valueOf(sc.nextInt(9999)) + ":"
                + counter.addAndGet(1);
    }

}
